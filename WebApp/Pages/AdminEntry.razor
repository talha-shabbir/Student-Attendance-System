@page "/attendance-entry"
@inject AttendanceService AttendanceService
@inject NavigationManager Navigation
 
<h3>Attendance Management</h3>

<div class="container mt-4">
    <!-- Attendance Entry Form -->
    <EditForm Model="@NewRecord" OnValidSubmit="@HandleValidSubmit">
        <div class="d-flex">
        <div class="mb-3">
            <label for="srNo" class="form-label">Sr No</label>
            <InputNumber id="srNo" class="form-control" @bind-Value="NewRecord.SrNo" />
        </div>
        <div class="mb-3">
            <label for="scheduleId" class="form-label">Schedule ID</label>
            <InputText id="scheduleId" class="form-control" @bind-Value="NewRecord.ScheduleID" />
        </div>
        </div>
        <div class="d-flex">
        <div class="mb-3">
            <label for="subjectName" class="form-label">Subject Name</label>
            <InputText id="subjectName" class="form-control" @bind-Value="NewRecord.SubjectName" />
        </div>
            <div class="d-flex">
                <div class="mb-3 me-2">
                    <label for="scheduleDate" class="form-label">Schedule Date</label>
                    <InputDate id="scheduleDate" class="form-control" @bind-Value="NewRecord.ScheduleDate" />
                </div>
            </div>

        </div>
        <div class="d-flex">
        <div class="mb-3">
            <label for="classTime" class="form-label">Class Time</label>
            <InputText id="classTime" class="form-control" @bind-Value="NewRecord.ClassTime" />
        </div>
        <div class="mb-3">
            <label for="className" class="form-label">Class Name</label>
            <InputText id="className" class="form-control" @bind-Value="NewRecord.ClassName" />
        </div>
        </div>
        <div class="mb-3">
            <label for="duration" class="form-label">Duration</label>
            <InputText id="duration" class="form-control" @bind-Value="NewRecord.Duration" />
        </div>
        <button type="submit" class="btn btn-primary">Save</button>
    </EditForm>

    <!-- Attendance Records Table -->
    <div class="mt-5">
        <h4>Attendance Records</h4>
        @if (AttendanceRecords != null && AttendanceRecords.Any())
        {
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Sr No</th>
                        <th>Schedule ID</th>
                        <th>Subject Name</th>
                        <th>Schedule Date</th>
                        <th>Class Time</th>
                        <th>Class Name</th>
                        <th>Duration</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var record in AttendanceRecords)
                    {
                        <tr>
                            <td>@record.SrNo</td>
                            <td>@record.ScheduleID</td>
                            <td>@record.SubjectName</td>
                            <td>@record.ScheduleDate</td>
                            <td>@record.ClassTime</td>
                            <td>@record.ClassName</td>
                            <td>@record.Duration</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>No attendance records available.</p>
        }
    </div>
</div>  
v
@code {
    private AttendanceRecord NewRecord = new AttendanceRecord();
    private List<AttendanceRecord>? AttendanceRecords;

    protected override async Task OnInitializedAsync()
    {
        AttendanceRecords = await AttendanceService.GetAttendanceRecordsAsync();
    }

    private async Task HandleValidSubmit()
    {
        await AttendanceService.SaveAttendanceRecordAsync(NewRecord);
        AttendanceRecords = await AttendanceService.GetAttendanceRecordsAsync(); // Refresh records
        NewRecord = new AttendanceRecord(); // Clear the form
        StateHasChanged(); // Trigger UI update
        Navigation.NavigateTo($"/TeacherDashboard/{NewRecord.ClassName}/{NewRecord.SubjectName}");
    }
}
