@inject AttendanceService AttendanceService
@inject LeaveService LeaveService
@inject NavigationManager nm
@using ClassLibraryModel
@inject IJSRuntime JSRuntime

<!-- Page Wrapper -->
<div class="wrapper" style="font-family: Calibri; ">
    <!-- Main Content -->
    <div class="container-fluid ">
        <!-- Metrics Section -->
        <div class="row">
            <div class="col-md-6">
                <div class="row">
                    <div class="col-md-6 mb-4">
                        <div class="card shadow-sm rounded text-center">
                            <div class="card-body">
                                <h5 class="text-secondary">Total Employees</h5>
                                <h2 class="fw-bold text-dark">@Employees.Count()</h2>
                                <span class="badge bg-success">+15%</span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 mb-4">
                        <div class="card shadow-sm rounded text-center">
                            <div class="card-body">
                                <h5 class="text-secondary">Active Employees</h5>
                                <h2 class="fw-bold text-dark">@Employees.Count(e => e.Status == "Active")</h2>
                                <span class="badge bg-info">Stable</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-4">
                        <div class="card shadow-sm rounded text-center">
                            <div class="card-body">
                                <h5 class="text-secondary">Inactive Employees</h5>
                                <h2 class="fw-bold text-dark">@Employees.Count(e => e.Status == "Inactive")</h2>
                                <span class="badge bg-warning">-10%</span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 mb-4">
                        <div class="card shadow-sm rounded text-center">
                            <div class="card-body">
                                <h5 class="text-secondary">New Recruits</h5>
                                <h2 class="fw-bold text-dark">@Employees.Count(e => e.IsNewRecruit)</h2>
                                <span class="badge bg-primary">+20%</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Attendance and Recruitment Section -->
            <div class="col-md-6">
                <div class="card shadow-sm rounded">
                    <div class="card-header bg-primary text-white fw-bold">Daily Attendance Statistics</div>
                    <div class="card-body text-center">
                        <canvas id="attendanceChart"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <div class="row mt-4">
            <div class="col-md-7 mb-4">
                <div class="card shadow-sm rounded">
                    <div class="card-header bg-secondary text-white fw-bold">Recruitment Overview</div>
                    <div class="card-body text-center">
                        <canvas id="recruitmentChart" style="height:30rem"></canvas>
                    </div>
                </div>
            </div>

            <div class="col-md-5 mb-4">
                <div class="card shadow-sm rounded">
                    <div class="card-header bg-warning text-white fw-bold">Leave Applications</div>
                    <div class="card-body">
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th>Leave ID</th>
                                    <th>Name</th>
                                    <th>Date</th>
                                    <th>Status</th>
                                    <th>Reason</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (LeaveApplication?.Any() == true)
                                {
                                    @foreach (var application in LeaveApplication)
                                    {
                                        <tr>
                                            <td>@application.LeaveId</td>
                                            <td>@application.StudentName</td>
                                            <td>@application.Date.ToShortDateString()</td>
                                            <td>@(application.Status ?? "Status Missing")</td>
                                            <td>@(application.Reason ?? "Reason Missing")</td>
                                            <td>
                                                @if (string.Equals(application.Status, "Pending", StringComparison.OrdinalIgnoreCase))
                                                {
                                                    <button class="btn btn-success btn-sm" @onclick="() => AcceptLeave(application)">Accept</button>
                                                    <button class="btn btn-danger btn-sm" @onclick="() => DeclineLeave(application)">Decline</button>
                                                }
                                                else
                                                {
                                                    <span>Processed</span>
                                                }
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="6" class="text-center">No leave applications found.</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
         <!-- Employee List -->
          <div class="row mt-4">
            <div class="col-12">
                <div class="card shadow-sm rounded">
                    <div class="card-header bg-dark text-white d-flex justify-content-between">
                        <span>Employee List</span>
                        <button class="btn btn-success btn-sm" @onclick="ShowAddEmployeeModal">Add New Employee</button>
                    </div>
                    <div class="card-body">
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>ID</th>
                                    <th>Email</th>
                                    <th>Date of Birth</th>
                                    <th>Join Date</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Employees.Any())
                                {
                                    @foreach (var employee in Employees)
                                    {
                                        <tr>
                                            <td>@employee.Name</td>
                                            <td>@employee.Id</td>
                                            <td>@employee.Email</td>
                                            <td>@employee.DOB.ToShortDateString()</td>
                                            <td>@employee.JoinDate.ToShortDateString()</td>
                                            <td>@employee.Status</td>
                                            <td>
                                                <div class="dropdown">
                                                    <button class="btn btn-sm" type="button" id="dropdownMenuButton_@employee.Id" data-bs-toggle="dropdown" aria-expanded="false">
                                                        <i class="bi bi-three-dots"></i>
                                                    </button>
                                                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton_@employee.Id">
                                                        <li>
                                                            <button class="dropdown-item" @onclick="() => ShowEditModalHandler(employee)">
                                                                <i class="bi bi-pencil"></i> Update
                                                            </button>
                                                        </li>
                                                        <li>
                                                            <button class="dropdown-item text-danger" @onclick="() => ConfirmDelete(employee)">
                                                                <i class="bi bi-trash"></i> Delete
                                                            </button>
                                                        </li>
                                                    </ul>
                                                </div>
                                            </td>

                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="7" class="text-center">No employees found.</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            </div>
        </div>

    </div>
        </div>

        @if (ShowDeleteConfirmation)
        {
            <div class="modal" style="display: block; background-color: rgba(0,0,0,0.5);">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Confirm Deletion</h5>
                            <button type="button" class="btn-close" @onclick="CancelDelete"></button>
                        </div>
                        <div class="modal-body">
                            <p>Are you sure you want to delete <strong>@SelectedEmployee?.Name</strong>?</p>
                        </div>
                        <div class="modal-footer">
                            <button class="btn btn-danger" @onclick="() => RemoveEmployee(SelectedEmployee)">Delete</button>
                            <button class="btn btn-secondary" @onclick="CancelDelete">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
        }


        <!-- Modals -->
        @if (ShowEmployeeModal)
        {
            <div class="modal" style="display: block; background-color: rgba(0,0,0,0.5);">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Employee Details</h5>
                            <button type="button" class="btn-close" @onclick="CloseEmployeeDetails"></button>
                        </div>
                        <div class="modal-body">
                            <p><strong>Name:</strong> @SelectedEmployee?.Name</p>
                            <p><strong>ID:</strong> @SelectedEmployee?.Id</p>
                            <p><strong>Email:</strong> @SelectedEmployee?.Email</p>
                            <p><strong>DOB:</strong> @SelectedEmployee?.DOB.ToShortDateString()</p>
                            <p><strong>Join Date:</strong> @SelectedEmployee?.JoinDate.ToShortDateString()</p>
                            <p><strong>Status:</strong> @SelectedEmployee?.Status</p>
                        </div>
                        <div class="modal-footer">
                            <button class="btn btn-secondary" @onclick="CloseEmployeeDetails">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        }

        @if (ShowEditModal)
        {
            <div class="modal" style="display: block; background-color: rgba(0,0,0,0.5);">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Edit Employee</h5>
                            <button type="button" class="btn-close" @onclick="CloseEditModal"></button>
                        </div>
                        <div class="modal-body">
                            <div class="form-group">
                                <label for="editName">Name</label>
                                <input type="text" id="editName" class="form-control" @bind="EditEmployeeData.Name" />
                            </div>
                            <div class="form-group">
                                <label for="editEmail">Email</label>
                                <input type="email" id="editEmail" class="form-control" @bind="EditEmployeeData.Email" />
                            </div>
                            <div class="form-group">
                                <label for="editStatus">Status</label>
                                <select id="editStatus" class="form-control" @bind="EditEmployeeData.Status">
                                    <option>Active</option>
                                    <option>Inactive</option>
                                </select>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button class="btn btn-primary" @onclick="SaveEditChanges">Save Changes</button>
                            <button class="btn btn-secondary" @onclick="CloseEditModal">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
        }

        @if (ShowAddEmployeeModalState)
        {
            <div class="modal" style="display: block; background-color: rgba(0,0,0,0.5);">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Add Employee</h5>
                            <button type="button" class="btn-close" @onclick="CloseAddEmployeeModal"></button>
                        </div>
                        <div class="modal-body">
                            <div class="form-group">
                                <label for="addName">Name</label>
                                <input type="text" id="addName" class="form-control" @bind="NewEmployee.Name" />
                            </div>
                            <div class="form-group">
                                <label for="addId">ID</label>
                                <input type="number" id="addId" class="form-control" @bind="NewEmployee.Id" />
                            </div>
                            <div class="form-group">
                                <label for="addDob">Date of Birth</label>
                                <input type="date" id="addDob" class="form-control" @bind="NewEmployee.DOB" />
                            </div>
                            <div class="form-group">
                                <label for="addJoinDate">Join Date</label>
                                <input type="date" id="addJoinDate" class="form-control" @bind="NewEmployee.JoinDate" />
                            </div>
                            <div class="form-group">
                                <label for="addEmail">Email</label>
                                <input type="email" id="addEmail" class="form-control" @bind="NewEmployee.Email" />
                            </div>
                            <div class="form-group">
                                <label for="addStatus">Status</label>
                                <select id="addStatus" class="form-control" @bind="NewEmployee.Status">
                                    <option>Active</option>
                                    <option>Inactive</option>
                                </select>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button class="btn btn-primary" @onclick="SaveNewEmployee">Save</button>
                            <button class="btn btn-secondary" @onclick="CloseAddEmployeeModal">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
        }

  


@code {
    private List<Employee> Employees = new();
    private bool ShowEmployeeModal = false;
    private bool ShowEditModal = false;
    private bool ShowAddEmployeeModalState = false;
    private bool ShowDeleteConfirmation = false;
    private Employee? SelectedEmployee;
    private Employee EditEmployeeData = new();
    private Employee NewEmployee = new();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("initializeCharts");
            await JSRuntime.InvokeVoidAsync("initializeDropdowns");
        }


    }
    private void ShowEmployeeDetails(Employee employee)
    {
        SelectedEmployee = employee;
        ShowEmployeeModal = true;
    }

    private void CloseEmployeeDetails()
    {
        ShowEmployeeModal = false;
    }

    private void ShowAddEmployeeModal()
    {
        NewEmployee = new Employee();
        ShowAddEmployeeModalState = true;
    }

    private void CloseAddEmployeeModal()
    {
        ShowAddEmployeeModalState = false;
    }

    private void SaveNewEmployee()
    {
        Employees.Add(NewEmployee);
        ShowAddEmployeeModalState = false;
    }

    private void ShowEditModalHandler(Employee employee)
    {
        EditEmployeeData = employee;
        ShowEditModal = true;
    }

    private void CloseEditModal()
    {
        ShowEditModal = false;
    }

    private void SaveEditChanges()
    {
        var index = Employees.FindIndex(e => e.Id == EditEmployeeData.Id);
        if (index != -1)
        {
            Employees[index] = EditEmployeeData;
        }
        ShowEditModal = false;
    }


    private void ConfirmDelete(Employee employee)
    {
        ShowDeleteConfirmation = true;
        SelectedEmployee = employee;
    }

    private void RemoveEmployee(Employee? employee)
    {
        if (employee != null)
        {
            Employees.Remove(employee);
        }
        ShowDeleteConfirmation = false;
    }

    private void CancelDelete()
    {
        ShowDeleteConfirmation = false;
    }

    private List<LeaveApplication>? LeaveApplication { get; set; }

        protected override async Task OnInitializedAsync()
        {
            // Assuming GetLeaveApplications() returns Task<List<LeaveApplication>>
            LeaveApplication = await LeaveService.GetLeaveApplication() ?? new List<LeaveApplication>();

            // If no leave applications were retrieved, use default ones
            if (!LeaveApplication.Any())
            {
                LeaveApplication = new List<LeaveApplication>
            {
                new LeaveApplication
                {
                    StudentName = "John Doe",
                    Date = DateTime.Now,
                    Status = "Pending",
                    Reason = "Medical"
                },
                new LeaveApplication
                {
                    StudentName = "Jane Smith",
                    Date = DateTime.Now.AddDays(-1),
                    Status = "Approved",
                    Reason = "Personal"
                }
            };
            }
        }
   


    private void AcceptLeave(LeaveApplication application)
    {
        application.Status = "Accepted";
         LeaveService.UpdateLeaveApplication(application);
       
    }

    private void DeclineLeave(LeaveApplication application)
    {
        application.Status = "Declined";
         LeaveService.UpdateLeaveApplication(application);
       
    }
}